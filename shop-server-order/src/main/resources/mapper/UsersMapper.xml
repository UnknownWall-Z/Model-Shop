<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.memory.shop.server.order.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.memory.shop.api.order.domain.Users" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="account" property="account"/>
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="user_money" property="userMoney" jdbcType="DECIMAL" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into users (nick_name, account, password, 
      phone, email, sex, birthday, 
      user_money)
    values (#{nickName,jdbcType=VARCHAR}, #{account}, #{password,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{birthday,jdbcType=DATE}, 
      #{userMoney,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey">
    update users
    set nick_name = #{nickName,jdbcType=VARCHAR},
      account = #{account},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=DATE},
      user_money = #{userMoney,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="base_column"/>
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select <include refid="base_column"/>
    from users
  </select>
  <sql id="base_column">
     id, nick_name, account, password, phone, email, sex, birthday, user_money
  </sql>
  <sql id="base_where">
    <where>
      <if test="nickName!=null and nickName!=''">
        and nickName like concat('%',#{nickName},'%')
      </if>
      <if test="minAccount!=null">
        and account &gt;= #{minAccount}
      </if>
      <if test="maxAccount!=null">
        and account &lt;= #{maxAccount}
      </if>
    </where>
  </sql>
  <select id="getTotalCount" resultType="int">
    select count(id) from users
    <include refid="base_where"/>
  </select>
  <select id="getListdata" resultMap="BaseResultMap">
    select <include refid="base_column"/>
    from users
    <include refid="base_where"/>
    limit #{beginIndex},#{pageSize}
  </select>
</mapper>